services:
  pulsar:
    image: apachepulsar/pulsar:3.2.0
    command: ["bash","-c","bin/pulsar standalone --no-functions-worker"]
    restart: unless-stopped
    ports: ["6650:6650", "8090:8080"]
    environment:
      PULSAR_PREFIX_advertisedAddress: pulsar
      PULSAR_MEM: "-Xms512m -Xmx1g -XX:MaxDirectMemorySize=1g"
      PULSAR_GC: "-XX:+UseG1GC -XX:MaxGCPauseMillis=10"
    volumes:
      - pulsar_data:/pulsar/data
      - pulsar_logs:/pulsar/logs
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://localhost:8080/admin/v2/brokers/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 30s
    deploy:
      resources:
        limits:
          memory: 2G
        reservations:
          memory: 1G
  
  bff:
    build:
      context: ./client/bff
    environment:
      PULSAR_URL: pulsar://pulsar:6650
      AFFILIATES_API_URL: http://affiliates:8000
      TOPIC_COMMANDS_AFFILIATES: commands.affiliates
      TRACKING_API_URL: http://tracking:8010
      TOPIC_COMMANDS_TRACKING: commands.tracking
      ALLIANCES_API_URL: http://alliances:8020
      TOPIC_COMMANDS_ALLIANCES: commands.alliances
      DEBUG: "true"
    depends_on:
      pulsar:
        condition: service_healthy
    ports: ["8080:8080"]

  affiliates_db:
    image: postgres:16
    environment:
      POSTGRES_USER: app
      POSTGRES_PASSWORD: app
      POSTGRES_DB: app
    ports: ["5432"]
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U app -d app"]
      interval: 5s
      timeout: 3s
      retries: 20  

  affiliates:
    build:
      context: .
      dockerfile: ./affiliates/Dockerfile
    environment:
      DATABASE_URL: postgresql+psycopg2://app:app@affiliates_db:5432/app
      PULSAR_URL: pulsar://pulsar:6650
      DEBUG: "true"
    depends_on:
      affiliates_db:
        condition: service_healthy
      pulsar:
        condition: service_healthy
    ports: ["8000:8000"]

  affiliates_worker:
    build: 
      context: .
      dockerfile: ./affiliates/Dockerfile
    environment:
      DATABASE_URL: postgresql+psycopg2://app:app@affiliates_db:5432/app
      PULSAR_URL: pulsar://pulsar:6650
      TOPIC_COMMANDS_AFFILIATES: commands.affiliates
      SUBSCRIPTION_NAME: affiliates-svc
    depends_on:
      affiliates_db:
        condition: service_healthy
      pulsar:
        condition: service_healthy
    command: python -m affiliates.presentation.worker

  tracking_db:
    image: postgres:16
    environment:
      POSTGRES_USER: app
      POSTGRES_PASSWORD: app
      POSTGRES_DB: app
    ports: ["5432"]
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U app -d app"]
      interval: 5s
      timeout: 3s
      retries: 20  

  tracking:
    build:
      context: ./tracking
    environment:
      DATABASE_URL: postgresql+psycopg2://app:app@tracking_db:5432/app
      PULSAR_URL: pulsar://pulsar:6650
      DEBUG: "true"
    depends_on:
      affiliates_db:
        condition: service_healthy
      pulsar:
        condition: service_healthy
    ports: ["8010:8010"]
    stop_grace_period: 30s

  # tracking_1:
  #   build:
  #     context: ./tracking
  #   environment:
  #     DATABASE_URL: postgresql+psycopg2://app:app@tracking_db:5432/app
  #     PULSAR_URL: pulsar://pulsar:6650
  #     DEBUG: "true"
  #   depends_on:
  #     tracking_db:
  #       condition: service_healthy
  #     pulsar:
  #       condition: service_healthy
  #   ports: ["8010"]
  #   container_name: tracking_1
  #   stop_grace_period: 30s

  # tracking_2:
  #   build:
  #     context: ./tracking
  #   environment:
  #     DATABASE_URL: postgresql+psycopg2://app:app@tracking_db:5432/app
  #     PULSAR_URL: pulsar://pulsar:6650
  #     DEBUG: "true"
  #   depends_on:
  #     tracking_db:
  #       condition: service_healthy
  #     pulsar:
  #       condition: service_healthy
  #   ports: ["8010"]
  #   container_name: tracking_2
  #   stop_grace_period: 30s

  tracking_worker:
    build: 
      context: ./tracking
    environment:
      DATABASE_URL: postgresql+psycopg2://app:app@tracking_db:5432/app
      PULSAR_URL: pulsar://pulsar:6650
      TOPIC_COMMANDS_TRACKING: commands.tracking
      TOPIC_EVENTS_TRACKING: events.tracking
      SUBSCRIPTION_NAME: tracking-svc
      BENCHMARK_MODE: "false"   # true solo para la prueba de capacidad
    depends_on:
      tracking_db:
        condition: service_healthy
      pulsar:
        condition: service_healthy
    command: python -m presentation.worker

  alliances:
    build:
      context: .
      dockerfile: ./alliances/Dockerfile
    environment:
      DATABASE_URL: postgresql+psycopg2://app:app@alliances_db:5432/app
      PULSAR_URL: pulsar://pulsar:6650
      DEBUG: "true"
    depends_on:
      alliances_db:
        condition: service_healthy
    ports: ["8020:8020"]

  alliances_db:
    image: postgres:16
    environment:
      POSTGRES_USER: app
      POSTGRES_PASSWORD: app
      POSTGRES_DB: app
    ports: ["5432"]
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U app -d app"]
      interval: 5s
      timeout: 3s
      retries: 20

  alliances_worker:
    build: 
      context: .
      dockerfile: ./alliances/Dockerfile
    environment:
      DATABASE_URL: postgresql+psycopg2://app:app@alliances_db:5432/app
      PULSAR_URL: pulsar://pulsar:6650
      TOPIC_COMMANDS_ALLIANCES: commands.alliances
      TOPIC_COMMANDS_AFFILIATES: commands.affiliates
      TOPIC_EVENTS_TRACKING: events.tracking
      ALLIANCES_SERVICE_COMMANDS: alliances-svc-commands
      TRACKING_SERVICE_EVENTS: tracking-svc-events
    depends_on:
      alliances_db:
        condition: service_healthy
      pulsar:
        condition: service_healthy
    command: python -m alliances.presentation.worker
  
  # tracking_nginx:
  #   image: nginx:stable-alpine
  #   ports:
  #     - "8040:80"
  #   depends_on:
  #     - tracking
  #   volumes:
  #     - ./nginx/tracking.conf:/etc/nginx/conf.d/default.conf

volumes:
  pulsar_data:
  pulsar_logs: